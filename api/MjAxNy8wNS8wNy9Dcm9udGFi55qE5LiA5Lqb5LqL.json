{"title":"Crontab的一些事","date":"2017-05-07T01:08:00.000Z","date_formatted":{"ll":"2017年5月7日","L":"2017/05/07","MM-DD":"05-07"},"link":"2017/05/07/Crontab的一些事","tags":["Crontab","Cron表达式"],"categories":["学习"],"updated":"2024-10-10T08:03:05.440Z","content":"<p>这两天研究自动续订博客证书的事情，把Cron从头到尾捋了一遍，踩了不少坑 <span id=\"more\"></span></p>\n<h2 id=\"cron的基本命令\">Cron的基本命令<a title=\"#cron的基本命令\" href=\"#cron的基本命令\"></a></h2>\n<p>下面命令都是基于CentOS Linux release 7.5.1804版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编辑cron</span></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\"><span class=\"comment\"># 查看cron</span></span><br><span class=\"line\">crontab -l</span><br><span class=\"line\"><span class=\"comment\"># 重载cron配置</span></span><br><span class=\"line\">service crond reload</span><br><span class=\"line\"><span class=\"comment\"># 重启cron服务</span></span><br><span class=\"line\">service crond restart</span><br><span class=\"line\"><span class=\"comment\"># 查看cron服务状态</span></span><br><span class=\"line\">service crond status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看cron日志</span></span><br><span class=\"line\">cat /var/<span class=\"built_in\">log</span>/cron</span><br><span class=\"line\"></span><br><span class=\"line\">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>\n<h2 id=\"cron表达式的坑\">cron表达式的坑<a title=\"#cron表达式的坑\" href=\"#cron表达式的坑\"></a></h2>\n<p>cron表达式和一般定时任务表达式不一样</p>\n<p><strong>Cron表达式从左往右，从秒开始；而Crontab则是从分钟开始的</strong></p>\n<p>Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格</p>\n<ol>\n<li>Minutes Hours DayofMonth Month DayofWeek Year</li>\n<li>Seconds Minutes Hours DayofMonth Month DayofWeek</li>\n</ol>\n<p>下面放分钟执行的对比</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一般表达式</span><br><span class=\"line\"><span class=\"symbol\">0 </span>*/<span class=\"number\">1</span> * * * ?</span><br><span class=\"line\"># cron表达式</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行cron任务输出日志\">执行cron任务输出日志<a title=\"#执行cron任务输出日志\" href=\"#执行cron任务输出日志\"></a></h2>\n<p>如果命令执行比较频繁（如每分钟一次），或者命令输出内容较多，会使这个邮件文件不断追加内容，文件越来越大。而邮件文件一般存放在根分区，根分区一般相对较小，所以会造成根分区写满而无法登录服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认会发送邮件 通过设置取消</span></span><br><span class=\"line\">MAILTO=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">SHELL=/bin/sh</span><br><span class=\"line\">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\">* * * * * /root/certbot.sh &gt; /root/certbot.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不输出内容</span></span><br><span class=\"line\">&amp;&gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"comment\"># 将正确和错误日志都输出</span></span><br><span class=\"line\">&gt; /root/certbot.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"comment\"># 只输出正确日志</span></span><br><span class=\"line\">&gt; /root/certbot.log &amp;</span><br><span class=\"line\"><span class=\"comment\"># 只输出错误日志</span></span><br><span class=\"line\">2&gt; /root/certbot.log &amp; </span><br></pre></td></tr></table></figure>\n<p>名词解释<br>\n在shell中，每个进程都和三个系统文件相关联：标准输入stdin，标准输出stdout和标准错误stderr，三个系统文件的文件描述符分别为0，1和2。所以这里2&gt;&amp;1的意思就是将标准错误也输出到标准输出当中。</p>\n<p>&gt; 就相当于 1&gt; 也就是重定向标准输出，不包括标准错误。通过2&gt;&amp;1，就将标准错误重定向到标准输出了（stderr已作为stdout的副本），那么再使用&gt;重定向就会将标准输出和标准错误信息一同重定向了。如果只想重定向标准错误到文件中，则可以使用2&gt; file</p>\n<p><strong>Tips</strong><br>\n<strong>重定向输出文件&gt;覆盖而&gt;&gt;是追加</strong></p>\n<h2 id=\"问题\">问题<a title=\"#问题\" href=\"#问题\"></a></h2>\n<p>/bin/sh: root: command not found<br>\n执行cron命令添加root用户会报错<br>\n问题在于文件/var/spool/cron/root已默认，无需再写root</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<p><a href=\"https://tool.lu/crontab/\" target=\"_blank\">crontab在线工具</a><br>\n<a href=\"https://blog.csdn.net/asdfghzqlj/article/details/80765613\" target=\"_blank\">crontab 脚本错误日志和正确的输出写入到文件</a></p>\n","prev":{"title":"搭建ShadowsocksR","link":"2017/05/18/搭建ShadowsocksR"},"next":{"title":"免费升级Https","link":"2017/04/29/免费升级Https"},"plink":"https://zinki.github.io/2017/05/07/Crontab的一些事/","toc":[{"id":"cron的基本命令","title":"Cron的基本命令","index":"1"},{"id":"cron表达式的坑","title":"cron表达式的坑","index":"2"},{"id":"执行cron任务输出日志","title":"执行cron任务输出日志","index":"3"},{"id":"问题","title":"问题","index":"4"},{"id":"参考","title":"参考","index":"5"}]}