{"title":"负载相关知识","date":"2021-11-19T09:20:00.000Z","date_formatted":{"ll":"2021年11月19日","L":"2021/11/19","MM-DD":"11-19"},"link":"2021/11/19/负载相关知识","tags":["负载"],"categories":["学习"],"updated":"2024-10-10T08:03:05.477Z","content":"<p>负载这一块的知识有些乱, 听人家常说软负载、硬负载，四层负载，七层负载、客户端负载,服务端负载之类的,所以梳理一下。</p>\n<p>负载均衡在系统架构中是一个非常重要,通过负载均衡可以提高系统的高可用，缓解网络、硬件资源的限制。<span id=\"more\"></span></p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>软负载</th>\n<th>客户端负载</th>\n<th>Spring Cloud Ribbon</th>\n<th style=\"padding:0\"></th>\n<th style=\"padding:0\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>服务端负载</td>\n<td>Ngixn (4-7)层负载</td>\n<td>Hyproxy (4-7)层负载</td>\n<td>kube-proxy (4-7)层负载</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>LVS(4)层负载</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>硬负载</td>\n<td>F5</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"软负载\">软负载<a title=\"#软负载\" href=\"#软负载\"></a></h3>\n<p>处理传输层到应用层的数据，为了能通一个URL或者IP+PORT将前端的访问分发到后台的多个服务器上</p>\n<ul>\n<li>客户端负载</li>\n</ul>\n<p>Dev 即开发角度的负载均衡。开发中的负载均衡一般是在微服务中涉及。服务提供方一般以多实例的形式提供服务，负载均衡功能能够让服务调用方连接到合适的服务节点。 并且，服务节点选择的过程对服务调用方来说是透明的</p>\n<ul>\n<li>\n<p>服务端负载</p>\n<p>Ops 即运维角度的负载均衡,这里的负载我们也称为服务端负载</p>\n<p>所谓服务端负载均衡,比如传统的Nginx的方式，调用的客户端并不知道具体是哪个服务提供的服务,它也不关心,反正请求发送给Nginx, 或者hyproxy作为代理的服务器，然后 Ngixn 在请求负载任意服务,客户端只需要记着Nginx的地址即可。</p>\n<ol>\n<li>\n<p>Nginx负载</p>\n<ul>\n<li>\n<p>七层(应用层)负载</p>\n<p>Nginx 7层负载是最常见的一种负载,所谓7层负载，即应用层负载，即基于应用层协议(TELNET,SSH,HTTP,SMTP,POP…)做的代理，7层负载需要解析数据包的具体内容，需要消耗额外的cpu，然后根据具体内容(url, 参数, cookie, 请求头)匹配相应的路径，然后转发到相应的服务器。转发的过程是：建立和目标机器的连接，然后转发请求，收到响应数据再转发给请求客户端。</p>\n</li>\n<li>\n<p>四层(传输层)负载</p>\n<p>所谓四层负载，即在传输层协议的基础上来做负载，基于TCP,UDP等协议，传输层的作用是确保数据被可靠的传输送到目标地址，能够让应用程序之间实现通信，所以彼此传递的是数据包，标识的只有IP+端口。不涉及具体的url其他结构解析。路径匹配等，不会涉及具体的应用层协议，所以理论上四层负载要比七成负载快。</p>\n<p>nginx 四层代理是nginx1.9.0开始新增的功能，需要开启–with-stream模块，可以实现四层协议的转发、代理、负载等功能</p>\n</li>\n</ul>\n</li>\n<li>\n<p>HAProxy负载<br>\nHAProxy 是一款提供高可用性、负载均衡以及基于TCP（第四层）和HTTP（第七层）应用的代理软件，支持虚拟主机，它是免费、快速并且可靠的一种解决方案。</p>\n<p>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy完全可以支持数以万计的并发连接。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h3>\n<p><a href=\"https://www.toutiao.com/i7048436406452044321\" target=\"_blank\">关于开发部署中(4层/7层/C端/S端)软负载均衡笔记</a></p>\n","prev":{"title":"X509证书解析","link":"2021/12/21/X509证书解析"},"next":{"title":"Markdown常用语法","link":"2021/10/25/Markdown常用语法"},"plink":"https://zinki.github.io/2021/11/19/负载相关知识/","toc":[{"id":"软负载","title":"软负载","index":"1"},{"id":"参考","title":"参考","index":"2"}]}