{"per_page":10,"total":8,"current":6,"data":[{"title":"AUFS基本原理","date":"2018-07-29T11:30:00.000Z","date_formatted":{"ll":"2018年7月29日","L":"2018/07/29","MM-DD":"07-29"},"excerpt":"<p>AUFS是一种<code>Union File System</code>，所谓UnionFS就是把不同物理位置的目录合并mount到同一个目录中。UnionFS的一个最主要的应用是，把一张<code>CD/DVD</code>和一个硬盘目录给联合 mount在一起，然后，你就可以对这个只读的<code>CD/DVD上</code>的文件进行修改（当然，修改的文件存于硬盘上的目录里）。","link":"2018/07/29/AUFS基本原理","tags":["AUFS","Docker"],"categories":["学习","转载"]},{"title":"Transactional注解不起作用如何排查","date":"2018-07-17T11:00:00.000Z","date_formatted":{"ll":"2018年7月17日","L":"2018/07/17","MM-DD":"07-17"},"excerpt":"<p>当@Transactional不起作用如何排查问题","link":"2018/07/17/Transactional注解不起作用如何排查","tags":["事务"],"categories":["工作"]},{"title":"Java字节码相关知识","date":"2018-06-15T13:00:00.000Z","date_formatted":{"ll":"2018年6月15日","L":"2018/06/15","MM-DD":"06-15"},"excerpt":"<p>字节码就是Java文件通过编译器编译成的.class文件","link":"2018/06/15/Java字节码相关知识","tags":["字节码"],"categories":["学习"]},{"title":"堆外内存相关知识","date":"2018-05-11T11:20:00.000Z","date_formatted":{"ll":"2018年5月11日","L":"2018/05/11","MM-DD":"05-11"},"excerpt":"<p>堆外内存是把内存对象分配在Java虚拟机的堆以外的内存，这些内存直接受操作系统管理（而不是虚拟机），这样做的结果就是能够在一定程度上减少垃圾回收对应用程序造成的影响。","link":"2018/05/11/堆外内存相关知识","tags":["堆外内存"],"categories":["学习"]},{"title":"Spring boot配置","date":"2018-04-09T12:00:00.000Z","date_formatted":{"ll":"2018年4月9日","L":"2018/04/09","MM-DD":"04-09"},"excerpt":"","link":"2018/04/09/Spring boot 配置","tags":["Spring boot"],"categories":["学习"]},{"title":"常用正则表达式","date":"2018-03-17T13:00:00.000Z","date_formatted":{"ll":"2018年3月17日","L":"2018/03/17","MM-DD":"03-17"},"excerpt":"","link":"2018/03/17/常用正则表达式","tags":["正则表达式"],"categories":["工作"]},{"title":"HashMap死循环问题","date":"2018-03-09T12:07:00.000Z","date_formatted":{"ll":"2018年3月9日","L":"2018/03/09","MM-DD":"03-09"},"excerpt":"<p>HashMap在并发执行put操作后get操作会引起死循环, 是因为多线程会导致 HashMap的 Entry链表形成环形数据结构, 一旦形成环形数据结构, Entry 的 next 节点永远不为空, 就会产生死循环获取Entry。","link":"2018/03/09/HashMap死循环问题","tags":["HashMap"],"categories":["学习"]},{"title":"Javascript引擎工作原理","date":"2018-02-06T14:09:00.000Z","date_formatted":{"ll":"2018年2月6日","L":"2018/02/06","MM-DD":"02-06"},"excerpt":"","link":"2018/02/06/Javascript引擎工作原理","tags":["Javascript"],"categories":["学习"]},{"title":"秒杀方案设计","date":"2018-01-17T12:05:00.000Z","date_formatted":{"ll":"2018年1月17日","L":"2018/01/17","MM-DD":"01-17"},"excerpt":"<p>秒杀的核心问题就是极高并发处理，由于系统要在瞬时承受平时数十倍甚至上百倍的流量，这往往超出系统上限，因此处理秒杀的核心思路是流控和性能优化","link":"2018/01/17/秒杀方案设计","tags":["秒杀"],"categories":["工作"]},{"title":"WebSocket原理","date":"2018-01-05T11:10:00.000Z","date_formatted":{"ll":"2018年1月5日","L":"2018/01/05","MM-DD":"01-05"},"excerpt":"<p>WebSocket 是一种在单个TCP连接上进行全双工通信的协议。WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。</p>\n<p>在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接， 并进行双向数据传输。（维基百科）","link":"2018/01/05/WebSocket原理","tags":["WebSocket"],"categories":["学习"]}]}