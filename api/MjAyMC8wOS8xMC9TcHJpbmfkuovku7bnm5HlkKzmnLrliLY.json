{"title":"Spring事件监听机制","date":"2020-09-10T02:11:00.000Z","date_formatted":{"ll":"2020年9月10日","L":"2020/09/10","MM-DD":"09-10"},"link":"2020/09/10/Spring事件监听机制","tags":["事务","监听器"],"categories":["学习"],"updated":"2024-10-10T08:03:05.459Z","content":"<p>使用 <code>@TransactionalEventListener</code> 结合 <code>Spring</code>事件监听机制可以实现触发时间效果 <span id=\"more\"></span><br>\n在项目中，往往需要执行数据库操作后，发送消息或事件来异步调用其他组件执行相应的操作，例如：<br>\n用户注册后发送激活码；<br>\n但是，数据库的操作如果还未完成，此时异步调用的方法查询数据库发现没有数据，这就会出现问题。</p>\n<p>为了解决上述问题，Spring为我们提供了两种方式：</p>\n<ol>\n<li><code>@TransactionalEventListener</code>注解</li>\n<li>事务同步管理器<code>TransactionSynchronizationManager</code><br>\n以便我们可以在事务提交后再触发某一事件</li>\n</ol>\n<p><code>@TransactionalEventListener</code>底层也是这样实现的</p>\n","prev":{"title":"SSH超时问题","link":"2020/10/20/SSH超时问题"},"next":{"title":"文件名乱码问题解决","link":"2020/07/20/文件名乱码问题解决"},"plink":"https://zinki.github.io/2020/09/10/Spring事件监听机制/"}