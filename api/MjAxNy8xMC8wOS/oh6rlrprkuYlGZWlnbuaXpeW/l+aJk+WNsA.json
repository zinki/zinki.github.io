{"title":"自定义Feign日志打印","date":"2017-10-09T13:09:00.000Z","date_formatted":{"ll":"2017年10月9日","L":"2017/10/09","MM-DD":"10-09"},"link":"2017/10/09/自定义Feign日志打印","tags":["Fegin","Spring boot"],"categories":["工作"],"updated":"2024-10-10T08:03:05.475Z","content":"<p>使用Feign进行Rest请求很方便，打印日志比较繁琐。AOP可以解决这个问题，对性能有所损耗；另一种办法是自定义日志输出<span id=\"more\"></span></p>\n<h2 id=\"aop打印日志\">AOP打印日志<a title=\"#aop打印日志\" href=\"#aop打印日志\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientInvokeResultAOP</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SUCCESS_CODE = ConstantsUtils.CommonCode.SUCCESS_CODE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(public * com.yonghui..*.client..*.*(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">invoke</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;invoke()&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> begin = System.currentTimeMillis();</span><br><span class=\"line\">        Object proceed = pjp.proceed();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> end = System.currentTimeMillis();</span><br><span class=\"line\">        Method targetMethod = ((MethodSignature) (pjp.getSignature())).getMethod();</span><br><span class=\"line\">        String className = targetMethod.getDeclaringClass().getName();</span><br><span class=\"line\">        String methodName = targetMethod.getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;[client trace] &#123;&#125; - &#123;&#125; consume &#123;&#125; ms&quot;</span>, className, methodName, end - begin);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (proceed <span class=\"keyword\">instanceof</span> R) &#123;</span><br><span class=\"line\">            R r = (R) proceed;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (SUCCESS_CODE != r.getCode()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RRException(r.getCode(), r.getMessage());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (proceed <span class=\"keyword\">instanceof</span> Rpage) &#123;</span><br><span class=\"line\">            Rpage rpage = (Rpage) proceed;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (SUCCESS_CODE != rpage.getCode()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RRException(rpage.getCode(), rpage.getMessage());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> proceed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义日志输出\">自定义日志输出<a title=\"#自定义日志输出\" href=\"#自定义日志输出\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RemoteInfoLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">Logger</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(String s, String s1, Object... objects)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">logRequest</span><span class=\"params\">(String configKey, Logger.Level logLevel, Request request)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Response <span class=\"title\">logAndRebufferResponse</span><span class=\"params\">(String configKey, Logger.Level logLevel, Response response, <span class=\"keyword\">long</span> elapsedTime)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response.body() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            String result=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] bodyData = Util.toByteArray(response.body().asInputStream());</span><br><span class=\"line\">            <span class=\"keyword\">int</span> bodyLength = bodyData.length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bodyLength &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                result = Util.decodeOrDefault(bodyData, Util.UTF_8, <span class=\"string\">&quot;Binary data&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Response build = response.toBuilder().body(bodyData).build();</span><br><span class=\"line\">            Request request = build.request();</span><br><span class=\"line\">            String bodyText =  request.requestBody().asString();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;请求URL:&quot;</span> + request.url());</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;请求参数:&quot;</span> + bodyText);</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;请求结果:&quot;</span> + result);</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;本次请求耗时:&quot;</span> + elapsedTime);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> build;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> IOException <span class=\"title\">logIOException</span><span class=\"params\">(String configKey, Level logLevel, IOException ioe, <span class=\"keyword\">long</span> elapsedTime)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//IOException 自带log输出即可 logger.error();</span></span><br><span class=\"line\">        <span class=\"comment\">// com.netflix.client.ClientException: Load balancer does not have available server for client: lzh-cloud-test 服务没发现未进IO异常</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ioe;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用的话需要在FeignConfig指定</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">Logger.<span class=\"function\">Level <span class=\"title\">feignLoggerLevel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Logger.Level.BASIC;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<p><a href=\"https://blog.csdn.net/luozhaohuan/article/details/85057877\" target=\"_blank\">Spring Cloud OpenFeign自定义日志</a></p>\n","prev":{"title":"并发常见问题","link":"2017/10/21/并发常见问题"},"next":{"title":"如何让JVM崩溃","link":"2017/09/27/如何让JVM崩溃"},"plink":"https://zinki.github.io/2017/10/09/自定义Feign日志打印/","toc":[{"id":"aop打印日志","title":"AOP打印日志","index":"1"},{"id":"自定义日志输出","title":"自定义日志输出","index":"2"},{"id":"参考","title":"参考","index":"3"}]}