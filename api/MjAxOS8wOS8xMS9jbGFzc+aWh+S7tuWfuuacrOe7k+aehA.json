{"title":"class文件基本结构","date":"2019-09-11T13:00:00.000Z","date_formatted":{"ll":"2019年9月11日","L":"2019/09/11","MM-DD":"09-11"},"link":"2019/09/11/class文件基本结构","tags":["class"],"categories":["学习"],"updated":"2024-10-10T08:03:05.462Z","content":"<p>构成<code>class</code>文件的基本数据单位是字节，<span id=\"more\"></span>可以把整个<code>class</code>文件当成一个字节流来处理。稍大一些的数据由连续多个字节构成，这些数据在class文件中以大端（big-endian）方式存储。为了描述class文件格式，Java虚拟机规范定义了u1、u2和u4三种数据类型来表示1、2和4字节无符号整数</p>\n<blockquote>\n<p>class文件以8字节为基本单位来进行存储，中间没有任何分隔符；</p>\n</blockquote>\n<blockquote>\n<p>当数据项需要占用的空间大于8字节时，会按照高位在前的方式来进行分割；</p>\n</blockquote>\n<blockquote>\n<p>class文件只有两种数据类型：无符号数、表；</p>\n</blockquote>\n<blockquote>\n<p>无符号数属于基本数据类型，以u1、u2、u4、u8分别代表1个字节、2个字节、4个字节和8个字节的无符号数；</p>\n</blockquote>\n<blockquote>\n<p>表是由多个无符号数或者其它表作为数据项构成的符合数据类型，表名习惯性都以_info 结尾</p>\n</blockquote>\n<p>class文件中相同类型的多条数据一般按表（table）的形式存储（包括接下来要讲的常量池，属性表，接口索引集合，字段表集合，方法表集合）,表由表头和表项（item）构成，表头是 u2 或 u4 整数。假设表头是 n，后面就紧跟着 n 个表项数据。</p>\n<p>class文件的结构描述:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ClassFile &#123;</span><br><span class=\"line\">  u4 magic;    //魔数</span><br><span class=\"line\">  u2 minor_version;    //次版本号</span><br><span class=\"line\">  u2 major_version;    //主版本号</span><br><span class=\"line\">  u2 constant_pool_count;    //常量池大小</span><br><span class=\"line\">  cp_info constant_pool[constant_pool_count-1]; //常量池</span><br><span class=\"line\">  u2 access_flags;    //类访问标志,表明class文件定义的是类还是接口，访问级别是public还是private，等</span><br><span class=\"line\">  u2 this_class;    //</span><br><span class=\"line\">  u2 super_class;    //</span><br><span class=\"line\">  u2 interfaces_count;    //本类实现的接口数量</span><br><span class=\"line\">  u2 interfaces[interfaces_count];    //实现的接口,存放在数组中</span><br><span class=\"line\">  u2 fields_count;        //本来中含有字段数</span><br><span class=\"line\">  field_info fields[fields_count];    //数组中存放这各个字段</span><br><span class=\"line\">  u2 methods_count;        //本类中含有的方法数</span><br><span class=\"line\">  method_info methods[methods_count];    //数组中存放着各个方法</span><br><span class=\"line\">  u2 attributes_count;            //本类中含有的属性数量;</span><br><span class=\"line\">  attribute_info attributes[attributes_count];    //数组中存放着各个属性</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很多文件格式都会规定满足该格式的文件必须以某几个固定字节开头，这几个字节主要起标识作用，叫作魔数（magic number）。例如 PDF 文件以 4 字节“%PDF”（0x25、0x50、0x44、0x46）开头，ZIP 文件以 2 字节“PK”（0x50、0x4B）开头。class 文件的魔数是“0xCAFEBABE”。</p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<p><a href=\"https://stackoverflow.com/questions/65200/how-do-you-crash-a-jvm\" target=\"_blank\">How do you crash a JVM?</a></p>\n","prev":{"title":"数据库相关知识","link":"2019/10/05/数据库相关知识"},"next":{"title":"Int绝对值问题","link":"2019/08/29/int绝对值问题"},"plink":"https://zinki.github.io/2019/09/11/class文件基本结构/","toc":[{"id":"参考","title":"参考","index":"1"}]}