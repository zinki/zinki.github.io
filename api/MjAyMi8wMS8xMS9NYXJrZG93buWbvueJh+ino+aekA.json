{"title":"Markdown图片解析","date":"2022-01-11T11:00:00.000Z","date_formatted":{"ll":"2022年1月11日","L":"2022/01/11","MM-DD":"01-11"},"link":"2022/01/11/Markdown图片解析","tags":["Markdown","Python"],"categories":["学习"],"updated":"2024-10-10T08:03:05.451Z","content":"<p>最近想对图床做个备份，刚好再看Python，遂参考网上代码写了解析Markdown文件并下载图片的Python脚本。<span id=\"more\"></span></p>\n<p>大致分为3部分：</p>\n<ol>\n<li>读取目录下所有Markdown文件</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">find_sub_path</span>(<span class=\"params\">path</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 初始化一个空的文章列表</span></span><br><span class=\"line\">    article_list = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.isfile(path):</span><br><span class=\"line\">        article_list.append(path)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 获取该文件夹下的所以子文件</span></span><br><span class=\"line\">        temp_files = os.listdir(path)</span><br><span class=\"line\">        <span class=\"comment\"># 遍历子文件</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> temp_file <span class=\"keyword\">in</span> temp_files:</span><br><span class=\"line\">            <span class=\"comment\"># 拼接该文件绝对路径</span></span><br><span class=\"line\">            full_path = os.path.join(path, temp_file)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 匹配.md文件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> os.path.isfile(full_path) <span class=\"keyword\">and</span> os.path.splitext(full_path)[<span class=\"number\">1</span>] == <span class=\"string\">&quot;.md&quot;</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 如果是.md文件 加入文章列表</span></span><br><span class=\"line\">                article_list.append(full_path)</span><br><span class=\"line\">            <span class=\"comment\"># 如果是文件夹 进行递归继续搜索</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> os.path.isdir(full_path):</span><br><span class=\"line\">                <span class=\"comment\"># 将子文件夹中的文章列表拼接到上级目录的文章列表中</span></span><br><span class=\"line\">                article_list.extend(find_sub_path(full_path))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> article_list</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>解析Markdown文本并获取图片链接</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查找图片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">find_pics</span>(<span class=\"params\">article_path</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 打开md文件</span></span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(article_path, <span class=\"string\">&#x27;rb&#x27;</span>)</span><br><span class=\"line\">    content = f.read().decode(<span class=\"string\">&#x27;UTF-8&#x27;</span>)</span><br><span class=\"line\">    pics = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 匹配正则 match ![]()</span></span><br><span class=\"line\">    results = re.findall(<span class=\"string\">r&quot;!\\[(.+?)\\)&quot;</span>, content)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> result <span class=\"keyword\">in</span> results:</span><br><span class=\"line\">        temp_pic = result.split(<span class=\"string\">&quot;](&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 将图片加入到图片数组当中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(temp_pic) == <span class=\"number\">2</span>:</span><br><span class=\"line\">            basename = os.path.basename(article_path)</span><br><span class=\"line\">            pic = picture.image(basename, temp_pic[<span class=\"number\">1</span>])</span><br><span class=\"line\">            pics.append(pic)</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pics</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>下载图片到指定目录</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">    sub_path = directory.find_sub_path(self.name_entry.get())</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(sub_path) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        index = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> path <span class=\"keyword\">in</span> sub_path:</span><br><span class=\"line\">            pics = article.find_pics(path)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(pics) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                picture.start_download_pic(self.path_entry.get(), pics)</span><br><span class=\"line\">            index = index + <span class=\"number\">1</span></span><br><span class=\"line\">            per = index / <span class=\"built_in\">len</span>(sub_path) * <span class=\"number\">100</span></span><br><span class=\"line\">            self.increment(<span class=\"built_in\">round</span>(per))</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>后面还用内置的tk，做了输入弹窗并显示处理进度条，详细代码参考：<a href=\"https://github.com/zinki/markdown-parser\" target=\"_blank\">parse markdown file</a></p>\n<h3 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h3>\n<p><a href=\"https://juejin.cn/post/6844903552813367304\" target=\"_blank\">实现 Markdown 图片下载器 - 掘金</a></p>\n","prev":{"title":"循环链表实践","link":"2022/01/20/循环链表实践"},"next":{"title":"X509证书解析","link":"2021/12/21/X509证书解析"},"plink":"https://zinki.github.io/2022/01/11/Markdown图片解析/","toc":[{"id":"参考","title":"参考","index":"1"}]}