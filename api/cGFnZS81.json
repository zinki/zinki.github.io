{"per_page":10,"total":8,"current":5,"data":[{"title":"Hadoop伪分布式部署","date":"2019-01-09T07:00:00.000Z","date_formatted":{"ll":"2019年1月9日","L":"2019/01/09","MM-DD":"01-09"},"excerpt":"<p>Hadoop can also be run on a single-node in a pseudo-distributed mode where each Hadoop daemon runs in a separate Java process.</p>","link":"2019/01/09/Hadoop伪分布式部署","tags":["Hadoop"],"categories":["学习"]},{"title":"网络相关知识","date":"2018-12-11T11:05:00.000Z","date_formatted":{"ll":"2018年12月11日","L":"2018/12/11","MM-DD":"12-11"},"excerpt":"<p>网络分为三类:局域网(LAN),广域网(WAN),城域网(MAN Metropolitan Area Network )","link":"2018/12/11/网络相关知识","tags":["网络"],"categories":["学习"]},{"title":"Copy-On-Write实现原理","date":"2018-11-21T09:00:00.000Z","date_formatted":{"ll":"2018年11月21日","L":"2018/11/21","MM-DD":"11-21"},"excerpt":"<p>Copy-On-Write简称COW，是一种用于程序设计中的优化策略。","link":"2018/11/21/Copy-On-Write实现原理","tags":["COW"],"categories":["学习"]},{"title":"CAS实现原理","date":"2018-10-13T12:00:00.000Z","date_formatted":{"ll":"2018年10月13日","L":"2018/10/13","MM-DD":"10-13"},"excerpt":"<p>CAS 指的是现代 CPU 广泛支持的一种对内存中的共享数据进行操作的一种特殊指令，在大多数处理器架构，包括IA32、Space中采用的都是CAS指令","link":"2018/10/13/CAS实现原理","tags":["CAS"],"categories":["学习"]},{"title":"自定义SQL打印","date":"2018-09-20T09:10:00.000Z","date_formatted":{"ll":"2018年9月20日","L":"2018/09/20","MM-DD":"09-20"},"excerpt":"<p>mybatis打印日志格式默认占位符，不方便排查SQL问题","link":"2018/09/20/自定义SQL打印","tags":["SQL"],"categories":["工作"]},{"title":"IO相关知识","date":"2018-09-05T02:10:00.000Z","date_formatted":{"ll":"2018年9月5日","L":"2018/09/05","MM-DD":"09-05"},"excerpt":"<p>select/poll/epoll区别","link":"2018/09/05/IO相关知识","tags":["IO"],"categories":["学习"]},{"title":"IOC实现原理","date":"2018-08-26T02:10:00.000Z","date_formatted":{"ll":"2018年8月26日","L":"2018/08/26","MM-DD":"08-26"},"excerpt":"<p>控制反转（Inversion of Control，英文缩写为IOC）是框架的重要特征，做到控制反转需要一个容器来实现，就是我们所说的IoC容器，最常见的IoC容器是Spring。","link":"2018/08/26/IOC实现原理","tags":["IOC"],"categories":["学习"]},{"title":"AOP实现原理","date":"2018-08-10T05:10:00.000Z","date_formatted":{"ll":"2018年8月10日","L":"2018/08/10","MM-DD":"08-10"},"excerpt":"<p>AOP是目前Spring框架中的核心之一，在应用中具有非常重要的作用，也是Spring其他组件的基础。它是一种面向切面编程的思想","link":"2018/08/10/AOP实现原理","tags":["AOP"],"categories":["学习"]},{"title":"AUFS DOCKER基础技术","date":"2018-08-10T05:10:00.000Z","date_formatted":{"ll":"2018年8月10日","L":"2018/08/10","MM-DD":"08-10"},"excerpt":"<p>AUFS是一种Union File System，所谓UnionFS就是把不同物理位置的目录合并mount到同一个目录中。UnionFS的一个最主要的应用是，把一张CD/DVD和一个硬盘目录给联合 mount在一起，然后，你就可以对这个只读的CD/DVD上的文件进行修改（当然，修改的文件存于硬盘上的目录里）。<br>\n<img src=\"http://zeven.cpolar.cn/2023/05/202305071348123.png\" alt loading=\"lazy\"><br>\nAUFS又叫Another UnionFS，后来叫Alternative UnionFS，后来可能觉得不够霸气，叫成Advance UnionFS。是个叫Junjiro Okajima（岡島順治郎）在2006年开发的，AUFS完全重写了早期的UnionFS 1.x，其主要目的是为了可靠性和性能，并且引入了一些新的功能，比如可写分支的负载均衡。AUFS在使用上全兼容UnionFS，而且比之前的UnionFS在稳定性和性能上都要好很多，后来的UnionFS 2.x开始抄AUFS中的功能。但是他居然没有进到Linux主干里，就是因为Linus不让，基本上是因为代码量比较多，而且写得烂（相对于只有3000行的union mount和10000行的UnionFS，以及其它平均下来只有6000行代码左右的VFS，AUFS居然有30000行代码），所以，岡島不断地改进代码质量，不断地提交，不断地被Linus拒掉，所以，到今天AUFS都还进不了Linux主干（今天你可以看到AUFS的代码其实还好了，比起OpenSSL好N倍，要么就是Linus对代码的质量要求非常高，要么就是Linus就是不喜欢AUFS）。</p>\n<p>不过，好在有很多发行版都用了AUFS，比如：Ubuntu 10.04，Debian6.0, Gentoo Live CD支持AUFS，所以，也OK了。</p>\n<p>好了，扯完这些闲话，我们还是看一个示例吧（环境：Ubuntu 14.04）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree</span><br><span class=\"line\">.</span><br><span class=\"line\">├── fruits</span><br><span class=\"line\">│   ├── apple</span><br><span class=\"line\">│   └── tomato</span><br><span class=\"line\">└── vegetables</span><br><span class=\"line\">    ├── carrots</span><br><span class=\"line\">    └── tomato</span><br><span class=\"line\"># 创建一个mount目录</span><br><span class=\"line\">$ mkdir mnt</span><br><span class=\"line\"></span><br><span class=\"line\"># 把水果目录和蔬菜目录union mount到 ./mnt目录中</span><br><span class=\"line\">$ sudo mount -t aufs -o dirs=./fruits:./vegetables none ./mnt</span><br><span class=\"line\"></span><br><span class=\"line\">#  查看./mnt目录</span><br><span class=\"line\">$ tree ./mnt</span><br><span class=\"line\">./mnt</span><br><span class=\"line\">├── apple</span><br><span class=\"line\">├── carrots</span><br><span class=\"line\">└── tomato</span><br></pre></td></tr></table></figure>\n<p>我们可以看到在./mnt目录下有三个文件，苹果apple、胡萝卜carrots和蕃茄tomato。水果和蔬菜的目录被union到了./mnt目录下了。</p>\n<p>我们来修改一下其中的文件内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo mnt &gt; ./mnt/apple</span><br><span class=\"line\">$ cat ./mnt/apple</span><br><span class=\"line\">mnt</span><br><span class=\"line\">$ cat ./fruits/apple</span><br><span class=\"line\">mnt</span><br><span class=\"line\">上面的示例，我们可以看到./mnt/apple的内容改了，./fruits/apple的内容也改了。</span><br><span class=\"line\">$ echo mnt_carrots &gt; ./mnt/carrots</span><br><span class=\"line\">$ cat ./vegetables/carrots</span><br><span class=\"line\">$ cat ./fruits/carrots</span><br><span class=\"line\">mnt_carrots</span><br></pre></td></tr></table></figure>\n<p>上面的示例，我们可以看到，我们修改了./mnt/carrots的文件内容，./vegetables/carrots并没有变化，反而是./fruits/carrots的目录中出现了carrots文件，其内容是我们在./mnt/carrots里的内容。</p>\n<p>也就是说，我们在mount aufs命令中，我们没有指它vegetables和fruits的目录权限，默认上来说，命令行上第一个（最左边）的目录是可读可写的，后面的全都是只读的。（一般来说，最前面的目录应该是可写的，而后面的都应该是只读的）</p>\n<p>所以，如果我们像下面这样指定权限来mount aufs，你就会发现有不一样的效果（记得先把上面./fruits/carrots的文件删除了）：</p>","link":"2018/08/10/AUFS DOCKER基础技术","tags":["DOCKER"],"categories":["转载"]},{"title":"AUFS基本原理","date":"2018-07-29T11:30:00.000Z","date_formatted":{"ll":"2018年7月29日","L":"2018/07/29","MM-DD":"07-29"},"excerpt":"<p>AUFS是一种<code>Union File System</code>，所谓UnionFS就是把不同物理位置的目录合并mount到同一个目录中。UnionFS的一个最主要的应用是，把一张<code>CD/DVD</code>和一个硬盘目录给联合 mount在一起，然后，你就可以对这个只读的<code>CD/DVD上</code>的文件进行修改（当然，修改的文件存于硬盘上的目录里）。","link":"2018/07/29/AUFS基本原理","tags":["AUFS","Docker"],"categories":["学习","转载"]}]}