{"title":"Int绝对值问题","date":"2019-08-29T10:00:00.000Z","date_formatted":{"ll":"2019年8月29日","L":"2019/08/29","MM-DD":"08-29"},"link":"2019/08/29/int绝对值问题","tags":["Integer"],"categories":["学习"],"updated":"2024-10-10T08:03:05.462Z","content":"<p>刷题用到Math.abs()，提交报错了，输入-2147483648时运行异常，检查了下取绝对值后还是原值，尝试取负值也一样<span id=\"more\"></span></p>\n<p>Math实现源码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static int abs(int a) &#123;</span><br><span class=\"line\">    return (a &lt; 0) ? -a : a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>int的范围是Integer.MIN_VALUE（-2^31）到Integer.MAX_VALUE（2^31-1）</p>\n<p>-2147483648的绝对值应该是2147483648,但是int类型最大值就是232-1为2147483647</p>\n<blockquote>\n<p>在二进制里，是用0和1来表示正负的，最高位为符号位，最高位为1代表负数，最高位为0代表正数。</p>\n</blockquote>\n<p>Java中32位的int<br>\n最大值为：2147483647， 二进制： <code>01111111111111111111111111111111</code><br>\n最小值为：-2147483648，二进制： <code>10000000000000000000000000000000</code></p>\n<p>而二进制正负转换的方式是反码+1，反码就是正码的所有位数的0和1对换。</p>\n<p>-2147483648的二进制正码：<code>10000000000000000000000000000000</code><br>\n-2147483648的二进制反码：<code>01111111111111111111111111111111</code><br>\n-2147483648的二进制反码+1：<code>10000000000000000000000000000000</code></p>\n<p>所以绕回来了。</p>\n<p>解决这个问题的办法就是转成Long类型计算</p>\n","prev":{"title":"class文件基本结构","link":"2019/09/11/class文件基本结构"},"next":{"title":"HashMap初始化容量","link":"2019/07/30/HashMap初始化容量"},"plink":"https://zinki.github.io/2019/08/29/int绝对值问题/"}