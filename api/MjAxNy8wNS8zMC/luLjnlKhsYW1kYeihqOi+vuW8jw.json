{"title":"常用lambda表达式","date":"2017-05-30T04:59:00.000Z","date_formatted":{"ll":"2017年5月30日","L":"2017/05/30","MM-DD":"05-30"},"link":"2017/05/30/常用lamda表达式","tags":["lambda表达式"],"categories":["工作"],"updated":"2024-10-10T08:03:05.466Z","content":"<p>lambda表达式可以简化代码书写，提高代码可读性，尤其对于集合操作很有用。<span id=\"more\"></span></p>\n<h3 id=\"从list获取某一属性列表\">从List获取某一属性列表<a title=\"#从list获取某一属性列表\" href=\"#从list获取某一属性列表\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hots.stream().map(集合变量::集合类变量属性).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n<h3 id=\"过滤属性写法\">过滤属性写法<a title=\"#过滤属性写法\" href=\"#过滤属性写法\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">staffBOS.stream().filter((CrmStaffBO staffBO) -&gt; staffIds.contains(staffBO.getStaffId())).collect(Collectors.toList())</span><br><span class=\"line\"># 过滤空值</span><br><span class=\"line\">orderItemList.stream().filter(Objects::nonNull).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n<h3 id=\"list-转map\">List 转Map<a title=\"#list-转map\" href=\"#list-转map\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orderItemList.stream().collect(Collectors.toMap(ProductRespVO::getId,a-&gt;a,(k1,k2)-&gt;k1));</span><br></pre></td></tr></table></figure>\n<h3 id=\"list分组\">List分组<a title=\"#list分组\" href=\"#list分组\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String,Integer&gt;promotionalOffersMap=orderItemList.stream().collect(Collectors.groupingBy(YhPlatformOrderItem::getProductCode,Collectors.summingInt(YhPlatformOrderItem::getPromotionalOffers)));</span><br></pre></td></tr></table></figure>\n<h3 id=\"从list获取属性map\">从List获取属性Map<a title=\"#从list获取属性map\" href=\"#从list获取属性map\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;Long,String&gt;urlMap=imageVideoVOS.stream().collect(Collectors.toMap(ResProductImageVideoVO::getId,ResProductImageVideoVO::getUrl,(k1,k2)-&gt;k1));</span><br><span class=\"line\"># 以下形式</span><br><span class=\"line\">Map&lt;String,Object&gt;productImageUrls=productCodes.stream().collect(Collectors.toMap(productCode-&gt;productCode,productCode-&gt;productClient.getProductImageUrl(productCode)));</span><br></pre></td></tr></table></figure>\n<h3 id=\"bigdecimal值累加\">Bigdecimal值累加<a title=\"#bigdecimal值累加\" href=\"#bigdecimal值累加\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BigDecimaltotalCount=vo.getItemVOS().stream().map(ReqYhMiniProgOrderItemVO::getQuantity).reduce(BigDecimal.ZERO,BigDecimal::add);</span><br></pre></td></tr></table></figure>\n<h3 id=\"有种写法不会报错，却不会执行\">有种写法不会报错，却不会执行<a title=\"#有种写法不会报错，却不会执行\" href=\"#有种写法不会报错，却不会执行\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yhPlatformOrderItems.stream().map(yhPlatformOrderItemMapper::updateById);</span><br></pre></td></tr></table></figure>\n<h3 id=\"不会执行,必须以下形式\">不会执行,必须以下形式<a title=\"#不会执行,必须以下形式\" href=\"#不会执行,必须以下形式\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yhPlatformOrderItems.stream().forEach(yhPlatformOrderItemMapper::updateById);</span><br></pre></td></tr></table></figure>","prev":{"title":"利用wordcloud生成云图","link":"2017/06/05/Wordcloud生成云图"},"next":{"title":"搭建ShadowsocksR","link":"2017/05/18/搭建ShadowsocksR"},"plink":"https://zinki.github.io/2017/05/30/常用lamda表达式/","toc":[{"id":"从list获取某一属性列表","title":"从List获取某一属性列表","index":"1"},{"id":"过滤属性写法","title":"过滤属性写法","index":"2"},{"id":"list-转map","title":"List 转Map","index":"3"},{"id":"list分组","title":"List分组","index":"4"},{"id":"从list获取属性map","title":"从List获取属性Map","index":"5"},{"id":"bigdecimal值累加","title":"Bigdecimal值累加","index":"6"},{"id":"有种写法不会报错，却不会执行","title":"有种写法不会报错，却不会执行","index":"7"},{"id":"不会执行,必须以下形式","title":"不会执行,必须以下形式","index":"8"}]}